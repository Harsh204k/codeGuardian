{
  "generated_at": "2025-09-28T13:55:13.320792+00:00",
  "target": "demos",
  "tool_availability": {
    "bandit": true,
    "cppcheck": true,
    "gosec": true,
    "spotbugs": true,
    "phpcs": false,
    "eslint": true
  },
  "result": {
    "app": "demos",
    "directory": "demos",
    "total_files": 5,
    "analyzed_files": 4,
    "total_findings": 22,
    "results_by_language": {
      "cpp": {
        "files": 1,
        "findings": 6
      },
      "javascript": {
        "files": 1,
        "findings": 1
      },
      "php": {
        "files": 1,
        "findings": 4
      },
      "python": {
        "files": 1,
        "findings": 11
      }
    },
    "file_results": [
      {
        "language": "cpp",
        "file": "demos\\vulnerable_cpp\\main.cpp",
        "analyzer": "cppcheck",
        "findings_count": 6,
        "findings": [
          {
            "id": "CPP-uninitMemberVar-c3a1f3d8",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-uninitMemberVar",
            "name": "Uninitmembervar",
            "file": "demos/vulnerable_cpp/main.cpp",
            "line": 18,
            "snippet": "UserManager() : userCount(0) {}",
            "cwe": "CWE-693",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "MEDIUM",
            "confidence": 0.7,
            "why": "Member variable 'UserManager::userDatabase' is not initialized in the constructor.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Member variable 'UserManager::userDatabase' is not initialized in the constructor."
            }
          },
          {
            "id": "CPP-unsafeClassCanLeak-e22832f3",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-unsafeClassCanLeak",
            "name": "Unsafeclasscanleak",
            "file": "demos/vulnerable_cpp/main.cpp",
            "line": 14,
            "snippet": "char* userDatabase[100]; // Array of user data",
            "cwe": "CWE-401",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.4,
            "why": "Class 'UserManager' is unsafe, 'UserManager::userDatabase' can leak by wrong usage.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Class 'UserManager' is unsafe, 'UserManager::userDatabase' can leak by wrong usage."
            }
          },
          {
            "id": "CPP-nullPointer-e90e460f",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-nullPointer",
            "name": "Nullpointer",
            "file": "demos/vulnerable_cpp/main.cpp",
            "line": 82,
            "snippet": "*ptr = 'A'; // CPP-NULLPTR-001",
            "cwe": "CWE-476",
            "owasp": "A04:2021-Insecure Design",
            "severity": "HIGH",
            "confidence": 0.9,
            "why": "Null pointer dereference: ptr",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Null pointer dereference: ptr"
            }
          },
          {
            "id": "CPP-uninitdata-c07c1d44",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-uninitdata",
            "name": "Uninitdata",
            "file": "demos/vulnerable_cpp/main.cpp",
            "line": 74,
            "snippet": "delete[] largeBuffer;",
            "cwe": "CWE-693",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "HIGH",
            "confidence": 0.9,
            "why": "Memory is allocated but not initialized: largeBuffer",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Memory is allocated but not initialized: largeBuffer"
            }
          },
          {
            "id": "CPP-unusedAllocatedMemory-bb51de37",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-unusedAllocatedMemory",
            "name": "Unusedallocatedmemory",
            "file": "demos/vulnerable_cpp/main.cpp",
            "line": 72,
            "snippet": "char* largeBuffer = new char[size * 1000000]; // CPP-INT-001",
            "cwe": "CWE-693",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.4,
            "why": "Variable 'largeBuffer' is allocated memory that is never used.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Variable 'largeBuffer' is allocated memory that is never used."
            }
          },
          {
            "id": "CPP-checkersReport-d4b0f7d7",
            "app": "demos",
            "language": "cpp",
            "rule_id": "CPP-checkersReport",
            "name": "Checkersreport",
            "file": "demos\\vulnerable_cpp\\main.cpp",
            "line": 0,
            "snippet": "",
            "cwe": "CWE-703",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.3,
            "why": "Active checkers: 168/966 (use --checkers-report=<filename> to see details)",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Active checkers: 168/966 (use --checkers-report=<filename> to see details)"
            }
          }
        ]
      },
      {
        "language": "go",
        "file": "demos\\vulnerable_go\\vuln_demo.go",
        "analyzer": "gosec/regex-fallback",
        "findings_count": 0,
        "findings": []
      },
      {
        "language": "javascript",
        "file": "demos\\vulnerable_js\\vuln_demo.js",
        "analyzer": "eslint-security/regex-fallback",
        "findings_count": 1,
        "findings": [
          {
            "id": "JS-no-unused-vars-b1fb9ec9",
            "app": "demos",
            "language": "javascript",
            "rule_id": "JS-no-unused-vars",
            "name": "No Unused Vars",
            "file": "demos\\vulnerable_js\\vuln_demo.js",
            "line": 27,
            "snippet": "exec('cat ' + filename, (error, stdout, stderr) => {  // VULNERABLE: command injection",
            "cwe": "CWE-693",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "HIGH",
            "confidence": 0.9,
            "why": "'stderr' is defined but never used.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: 'stderr' is defined but never used."
            }
          }
        ]
      },
      {
        "language": "php",
        "file": "demos\\vulnerable_php\\index.php",
        "analyzer": "phpcs-security/regex-fallback",
        "findings_count": 4,
        "findings": [
          {
            "id": "PHP-REGEX-1f2e2372",
            "app": "demos",
            "language": "php",
            "rule_id": "PHP-POTENTIAL_SQL_INJECTION",
            "name": "Potential SQL injection",
            "file": "demos\\vulnerable_php\\index.php",
            "line": 18,
            "snippet": "$sql = \"SELECT * FROM users WHERE id = \" . $userId . \" AND name = '\" . $userName . \"'\"; // PHP-SQLI-001",
            "cwe": "CWE-89",
            "owasp": "A03:2021-Injection",
            "severity": "HIGH",
            "confidence": 0.7,
            "why": "Direct variable use in SQL query without parameterization",
            "quickfix": {
              "type": "suggest",
              "message": "Fix: Direct variable use in SQL query without parameterization"
            }
          },
          {
            "id": "PHP-REGEX-d61e5e87",
            "app": "demos",
            "language": "php",
            "rule_id": "PHP-SHELL_COMMAND_EXECUTION",
            "name": "Shell command execution",
            "file": "demos\\vulnerable_php\\index.php",
            "line": 25,
            "snippet": "$output = shell_exec(\"ls -la \" . $cmd); // PHP-CMDI-001",
            "cwe": "CWE-78",
            "owasp": "A03:2021-Injection",
            "severity": "HIGH",
            "confidence": 0.7,
            "why": "shell_exec() can lead to command injection vulnerabilities",
            "quickfix": {
              "type": "suggest",
              "message": "Fix: shell_exec() can lead to command injection vulnerabilities"
            }
          },
          {
            "id": "PHP-REGEX-80e45146",
            "app": "demos",
            "language": "php",
            "rule_id": "PHP-UNSAFE_DESERIALIZATION",
            "name": "Unsafe deserialization",
            "file": "demos\\vulnerable_php\\index.php",
            "line": 46,
            "snippet": "$data = unserialize($_POST['data']); // PHP-DESER-001",
            "cwe": "CWE-502",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "HIGH",
            "confidence": 0.7,
            "why": "Unserializing user input can lead to object injection",
            "quickfix": {
              "type": "suggest",
              "message": "Fix: Unserializing user input can lead to object injection"
            }
          },
          {
            "id": "PHP-REGEX-310a9b0d",
            "app": "demos",
            "language": "php",
            "rule_id": "PHP-DANGEROUS_EVAL()_FUNCTION",
            "name": "Dangerous eval() function",
            "file": "demos\\vulnerable_php\\index.php",
            "line": 65,
            "snippet": "eval($code); // PHP-EVAL-001",
            "cwe": "CWE-95",
            "owasp": "A03:2021-Injection",
            "severity": "HIGH",
            "confidence": 0.7,
            "why": "Use of eval() can lead to code injection vulnerabilities",
            "quickfix": {
              "type": "suggest",
              "message": "Fix: Use of eval() can lead to code injection vulnerabilities"
            }
          }
        ]
      },
      {
        "language": "python",
        "file": "demos\\vulnerable_py\\app.py",
        "analyzer": "bandit",
        "findings_count": 11,
        "findings": [
          {
            "id": "PY-B404-28bf05e9",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B404",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 7,
            "snippet": "6 \n7 import subprocess\n8 import pickle",
            "cwe": "CWE-78",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.9,
            "why": "Consider possible security implications associated with the subprocess module.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Consider possible security implications associated with the subprocess module."
            }
          },
          {
            "id": "PY-B403-7be72101",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B403",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 8,
            "snippet": "7 import subprocess\n8 import pickle\n9 import os",
            "cwe": "CWE-502",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.9,
            "why": "Consider possible security implications associated with pickle module.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Consider possible security implications associated with pickle module."
            }
          },
          {
            "id": "PY-B105-0b2749fb",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B105",
            "name": "hardcoded_password_string",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 17,
            "snippet": "16 # Hardcoded credentials - major security risk\n17 DB_PASSWORD = \"admin123!\"  # PY-HARDCRED-001\n18 API_KEY = \"sk-1234567890abcdef1234567890abcdef\"  # PY-HARDCRED-002",
            "cwe": "CWE-798",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.6,
            "why": "Possible hardcoded password: 'admin123!'",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Possible hardcoded password: 'admin123!'"
            }
          },
          {
            "id": "PY-B105-632c4850",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B105",
            "name": "hardcoded_password_string",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 19,
            "snippet": "18 API_KEY = \"sk-1234567890abcdef1234567890abcdef\"  # PY-HARDCRED-002\n19 SECRET_KEY = \"mySuperSecretKey123456789\"  # PY-HARDCRED-003\n20",
            "cwe": "CWE-798",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.6,
            "why": "Possible hardcoded password: 'mySuperSecretKey123456789'",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Possible hardcoded password: 'mySuperSecretKey123456789'"
            }
          },
          {
            "id": "PY-B608-a99e5570",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B608",
            "name": "hardcoded_sql_expressions",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 32,
            "snippet": "31     cursor = conn.cursor()\n32     sql = f\"SELECT * FROM users WHERE id = {user_id} AND name = '{user_input}'\"  # PY-SQLI-001\n33     cursor.execute(sql)",
            "cwe": "CWE-89",
            "owasp": "A03:2021-Injection",
            "severity": "MEDIUM",
            "confidence": 0.3,
            "why": "Possible SQL injection vector through string-based query construction.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Possible SQL injection vector through string-based query construction."
            }
          },
          {
            "id": "PY-B602-e0cb3f1d",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B602",
            "name": "subprocess_popen_with_shell_equals_true",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 39,
            "snippet": "38     cmd = f\"ls -la {user_input}\"\n39     result = subprocess.run(cmd, shell=True, capture_output=True, text=True)  # PY-CMDI-001\n40     print(f\"Command output: {result.stdout}\")",
            "cwe": "CWE-78",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "HIGH",
            "confidence": 0.9,
            "why": "subprocess call with shell=True identified, security issue.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: subprocess call with shell=True identified, security issue."
            }
          },
          {
            "id": "PY-B301-a31eda5d",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B301",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 53,
            "snippet": "52         try:\n53             obj = pickle.loads(bytes.fromhex(data))  # PY-DESER-001\n54             print(f\"Deserialized object: {obj}\")",
            "cwe": "CWE-502",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "MEDIUM",
            "confidence": 0.9,
            "why": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue."
            }
          },
          {
            "id": "PY-B506-41e551c7",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B506",
            "name": "yaml_load",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 62,
            "snippet": "61         yaml_data = f\"!!python/object:user_input {user_input}\"\n62         obj = yaml.load(yaml_data, Loader=yaml.FullLoader)  # PY-DESER-002\n63         print(f\"YAML object: {obj}\")",
            "cwe": "CWE-798",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "MEDIUM",
            "confidence": 0.9,
            "why": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load()."
            }
          },
          {
            "id": "PY-B311-a6241947",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B311",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 69,
            "snippet": "68     random.seed(12345)  # Predictable seed\n69     session_id = random.randint(1000, 9999)  # PY-WEAKRAND-001\n70     print(f\"Session ID: {session_id}\")",
            "cwe": "CWE-330",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "LOW",
            "confidence": 0.9,
            "why": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Standard pseudo-random generators are not suitable for security/cryptographic purposes."
            }
          },
          {
            "id": "PY-B307-7eff6e19",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B307",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 81,
            "snippet": "80     try:\n81         eval(code)  # PY-EVAL-001\n82     except:",
            "cwe": "CWE-78",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "MEDIUM",
            "confidence": 0.9,
            "why": "Use of possibly insecure function - consider using safer ast.literal_eval.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Use of possibly insecure function - consider using safer ast.literal_eval."
            }
          },
          {
            "id": "PY-B301-385545fe",
            "app": "demos",
            "language": "python",
            "rule_id": "PY-B301",
            "name": "blacklist",
            "file": ".\\demos\\vulnerable_py\\app.py",
            "line": 104,
            "snippet": "103     \"\"\"Insecure deserialization function\"\"\"\n104     return pickle.loads(data)  # PY-DESER-003\n105",
            "cwe": "CWE-502",
            "owasp": "A06:2021-Vulnerable Components",
            "severity": "MEDIUM",
            "confidence": 0.9,
            "why": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
            "quickfix": {
              "type": "suggest",
              "message": "Review and fix: Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue."
            }
          }
        ]
      }
    ]
  }
}