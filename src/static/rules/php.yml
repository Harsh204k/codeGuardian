# PHP Security Rules

rules:
  - id: php_eval_usage
    name: "Use of eval()"
    cwe_id: "CWE-94"
    severity: CRITICAL
    confidence: HIGH
    type: api_call
    api_names: [eval, assert]
    description: "eval() executes arbitrary PHP code"
    remediation: "Avoid eval(); refactor code"
    
  - id: php_weak_hash
    name: "Weak Password Hashing"
    cwe_id: "CWE-327"
    severity: HIGH
    confidence: HIGH
    type: api_call
    api_names: [md5, sha1]
    description: "MD5/SHA1 are not suitable for password hashing"
    remediation: "Use password_hash() with bcrypt"
    
  - id: php_sql_injection
    name: "SQL Injection"
    cwe_id: "CWE-89"
    severity: HIGH
    confidence: MEDIUM
    type: regex
    pattern: '(mysql_query|mysqli_query)\s*\([^)]*\$_(GET|POST|REQUEST)'
    description: "Direct use of user input in SQL query"
    remediation: "Use prepared statements"
    
  - id: php_file_inclusion
    name: "File Inclusion Vulnerability"
    cwe_id: "CWE-98"
    severity: HIGH
    confidence: MEDIUM
    type: regex
    pattern: '(include|require)(_once)?\s*\([^)]*\$_(GET|POST|REQUEST)'
    description: "User input in file inclusion"
    remediation: "Validate file paths with allowlist"
    
  - id: php_command_injection
    name: "Command Injection"
    cwe_id: "CWE-78"
    severity: HIGH
    confidence: HIGH
    type: api_call
    api_names: [exec, system, shell_exec, passthru, proc_open]
    description: "OS command execution"
    remediation: "Avoid shell commands or use escapeshellarg()"
