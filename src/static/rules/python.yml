# Python-Specific Security Rules

rules:
  - id: python_eval_exec
    name: "Dangerous eval/exec Usage"
    cwe_id: "CWE-94"
    severity: CRITICAL
    confidence: HIGH
    type: api_call
    api_names: [eval, exec, compile]
    description: "Use of eval/exec can execute arbitrary code"
    remediation: "Use ast.literal_eval for safe evaluation"
    
  - id: python_assert_in_production
    name: "Assert Statement in Production"
    cwe_id: "CWE-703"
    severity: LOW
    confidence: MEDIUM
    type: keyword
    keywords: [assert]
    description: "Assert statements are removed when Python is run with -O"
    remediation: "Use proper exception handling"
    
  - id: python_flask_debug
    name: "Flask Debug Mode Enabled"
    cwe_id: "CWE-489"
    severity: HIGH
    confidence: HIGH
    type: regex
    pattern: 'app\.run\s*\([^)]*debug\s*=\s*True'
    description: "Flask debug mode exposes sensitive information"
    remediation: "Disable debug mode in production"
    
  - id: python_sql_format
    name: "SQL Query with String Formatting"
    cwe_id: "CWE-89"
    severity: HIGH
    confidence: MEDIUM
    type: regex
    pattern: '\.execute\s*\([^)]*\.format\('
    description: "SQL injection via string formatting"
    remediation: "Use parameterized queries"
    
  - id: python_weak_random
    name: "Weak Random Number Generator"
    cwe_id: "CWE-338"
    severity: MEDIUM
    confidence: HIGH
    type: regex
    pattern: '\brandom\.(random|randint|choice)'
    description: "random module is not cryptographically secure"
    remediation: "Use secrets module for security-sensitive operations"
    
  - id: python_unsafe_ssl
    name: "Unsafe SSL/TLS Configuration"
    cwe_id: "CWE-295"
    severity: MEDIUM
    confidence: HIGH
    type: regex
    pattern: 'ssl\._create_unverified_context|verify\s*=\s*False'
    description: "SSL certificate verification disabled"
    remediation: "Enable SSL certificate verification"
    
  - id: python_tempfile_insecure
    name: "Insecure Temporary File"
    cwe_id: "CWE-377"
    severity: MEDIUM
    confidence: MEDIUM
    type: api_call
    api_names: [tempfile.mktemp]
    description: "mktemp() is insecure (race condition)"
    remediation: "Use tempfile.mkstemp() or NamedTemporaryFile"
    
  - id: python_shell_true
    name: "Subprocess with shell=True"
    cwe_id: "CWE-78"
    severity: HIGH
    confidence: MEDIUM
    type: regex
    pattern: 'subprocess\.(call|run|Popen)\s*\([^)]*shell\s*=\s*True'
    description: "shell=True enables shell injection"
    remediation: "Use shell=False and pass arguments as list"
